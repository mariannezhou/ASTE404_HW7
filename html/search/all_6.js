var searchData=
[
  ['b_0',['b',['../classvec_test_class.html#adf350f56726a153d5cadc8ed463d3151',1,'vecTestClass']]],
  ['b_5f_1',['b_',['../gmock-spec-builders__test_8cc.html#a7450f74c57def233a5a817abe4a16811',1,'gmock-spec-builders_test.cc']]],
  ['bar_2',['bar',['../namespacebar.html',1,'']]],
  ['bar_20tt_20gives_20me_20error_20tt_20no_20matching_20function_20for_20call_20to_20footest_3a_3afootest_20tt_20why_3',['I have a fixture class &lt;tt&gt;FooTest&lt;/tt&gt;, but &lt;tt&gt;TEST_F(FooTest, Bar)&lt;/tt&gt; gives me error &lt;tt&gt;&quot;no matching function for call to `FooTest::FooTest()&apos;&quot;&lt;/tt&gt;. Why?',['../md_googletest_2docs_2faq.html#autotoc_md100',1,'']]],
  ['bar_20tt_20test_20methods_20defined_20in_20different_20namespaces_4',['Is it OK if I have two separate &lt;tt&gt;TEST(Foo, Bar)&lt;/tt&gt; test methods defined in different namespaces?',['../md_googletest_2docs_2faq.html#autotoc_md109',1,'']]],
  ['barenvironment_5',['BarEnvironment',['../class_bar_environment.html',1,'']]],
  ['base_6',['Base',['../class_base.html',1,'Base'],['../classtesting_1_1internal_1_1_base.html',1,'testing::internal::Base'],['../structtesting_1_1internal_1_1_action_impl_3_01_r_07_args_8_8_8_08_00_01_impl_01_4.html#a4dededa4ec14ef85f71ca3978e83057e',1,'testing::internal::ActionImpl&lt; R(Args...), Impl &gt;::Base'],['../classtesting_1_1internal_1_1_base.html#a6b29f1a7192b126e6fa0aae31200b5ca',1,'testing::internal::Base::Base()'],['../classtesting_1_1internal_1_1_base.html#a255d105410a1eeb5f4690c9c8cd8e104',1,'testing::internal::Base::Base(int n)'],['../classtesting_1_1internal_1_1_base.html#a7887d85cf4180ecb0f3cc4b5f3a10b35',1,'testing::internal::Base::Base(const Base &amp;)=default'],['../class_base.html#a1d5f3fb92f8cbc687705785bdc6abd18',1,'Base::Base()']]],
  ['base64unescape_7',['Base64Unescape',['../namespacetesting_1_1internal.html#a7ebfee596839f25b8aec40192af1dcdc',1,'testing::internal']]],
  ['based_20actions_8',['Legacy macro-based Actions',['../md_googletest_2docs_2gmock__cook__book.html#autotoc_md177',1,'']]],
  ['based_20on_20the_20arguments_9',['Performing Different Actions Based on the Arguments',['../md_googletest_2docs_2gmock__cook__book.html#autotoc_md131',1,'']]],
  ['based_20on_20the_20state_10',['Changing a Mock Object&apos;s Behavior Based on the State',['../md_googletest_2docs_2gmock__cook__book.html#autotoc_md149',1,'']]],
  ['based_20parameterized_20actions_11',['Legacy macro-based parameterized Actions',['../md_googletest_2docs_2gmock__cook__book.html#autotoc_md178',1,'']]],
  ['basegenerator_12',['BaseGenerator',['../classtesting_1_1internal_1_1_param_iterator_interface.html#a717c299a43b4db6c85b94b827276b8a1',1,'testing::internal::ParamIteratorInterface']]],
  ['basic_20concepts_13',['Basic Concepts',['../md_googletest_2docs_2primer.html#autotoc_md229',1,'']]],
  ['basic_20example_14',['Basic Example',['../md_googletest_2docs_2gmock__cook__book.html#autotoc_md167',1,'']]],
  ['bazel_15',['Quickstart: Building with Bazel',['../md_googletest_2docs_2quickstart-bazel.html',1,'']]],
  ['bazel_20workspace_16',['Set up a Bazel workspace',['../md_googletest_2docs_2quickstart-bazel.html#autotoc_md237',1,'']]],
  ['bazel_5ffail_5ffast_5fenv_5fvar_17',['BAZEL_FAIL_FAST_ENV_VAR',['../namespacegoogletest-failfast-unittest.html#af768878a388f18270b57dd7a124a18d4',1,'googletest-failfast-unittest']]],
  ['be_18',['What can the statement argument in ASSERT_DEATH() be?',['../md_googletest_2docs_2faq.html#autotoc_md99',1,'']]],
  ['be_20called_19',['Cardinalities: How Many Times Will It Be Called?',['../md_googletest_2docs_2gmock__for__dummies.html#autotoc_md216',1,'']]],
  ['be_20defined_3a_20',['The following macros can be defined:',['../md_googletest_2googletest_2include_2gtest_2internal_2custom_2_r_e_a_d_m_e.html#autotoc_md388',1,'']]],
  ['be_20friendly_21',['Please Be Friendly',['../md_googletest_2_c_o_n_t_r_i_b_u_t_i_n_g.html#autotoc_md5',1,'']]],
  ['be_20named_20tt_20deathtest_20tt_20when_20it_20uses_20tt_20assert_5fdeath_20tt_22',['Why does GoogleTest require the entire test suite, instead of individual tests, to be named &lt;tt&gt;*DeathTest&lt;/tt&gt; when it uses &lt;tt&gt;ASSERT_DEATH&lt;/tt&gt;?',['../md_googletest_2docs_2faq.html#autotoc_md102',1,'']]],
  ['be_20reasonable_20not_20to_20show_20the_20warning_20in_20this_20case_23',['gMock prints a warning when a function without EXPECT_CALL is called, even if I have set its behavior using ON_CALL. Would it be reasonable not to show the warning in this case?',['../md_googletest_2docs_2gmock__faq.html#autotoc_md194',1,'']]],
  ['be_20what_20does_20this_20mean_24',['My compiler complains &quot;void value not ignored as it ought to be.&quot; What does this mean?',['../md_googletest_2docs_2faq.html#autotoc_md90',1,'']]],
  ['be_20wrong_25',['I get a heapcheck failure when using a mock object, but using a real object is fine. What can be wrong?',['../md_googletest_2docs_2gmock__faq.html#autotoc_md192',1,'']]],
  ['become_20a_20contributor_20and_20submit_20your_20own_20code_26',['How to become a contributor and submit your own code',['../md_googletest_2_c_o_n_t_r_i_b_u_t_i_n_g.html',1,'']]],
  ['before_27',['before',['../gtest-typed-test__test_8cc.html#aeebfd9871e2af1c35803e67cec4897cc',1,'gtest-typed-test_test.cc']]],
  ['begin_28',['Begin',['../classtesting_1_1internal_1_1_param_generator_interface.html#adcb074da01e5fac94fcbbc3aee629978',1,'testing::internal::ParamGeneratorInterface::Begin()'],['../classtesting_1_1internal_1_1_range_generator.html#aa3e9359b2313748d31e19782de47bf53',1,'testing::internal::RangeGenerator::Begin()'],['../classtesting_1_1internal_1_1_values_in_iterator_range_generator.html#aa3dc4b6972cfc8a5912e00826062a1e7',1,'testing::internal::ValuesInIteratorRangeGenerator::Begin()'],['../classtesting_1_1internal_1_1_cartesian_product_generator.html#a1810e0712b9b98c9f724a8fbfbe5ece3',1,'testing::internal::CartesianProductGenerator::Begin()'],['../classtesting_1_1internal_1_1_param_generator_converter.html#ae2d4a7e28220a3609efaec42b98b8541',1,'testing::internal::ParamGeneratorConverter::Begin()']]],
  ['begin_29',['begin',['../classtesting_1_1internal_1_1_native_array.html#a3046d93cfa23097e7b7c91f5f982dc78',1,'testing::internal::NativeArray::begin()'],['../classtesting_1_1internal_1_1_param_generator.html#a14e735c8bd113556ae905a560cd2d607',1,'testing::internal::ParamGenerator::begin()'],['../classfoo_1_1_path_like.html#a7ca8b63139fd6fcada55fbf13ccf9c83',1,'foo::PathLike::begin()'],['../struct_const_only_container_with_pointer_iterator.html#a3dd48a5028ca3c3bed0a10d7c5fa938b',1,'ConstOnlyContainerWithPointerIterator::begin()'],['../struct_const_only_container_with_class_iterator.html#a30be5262acd17c34d19b19d560ebd541',1,'ConstOnlyContainerWithClassIterator::begin()']]],
  ['behavior_30',['Testing Asynchronous Behavior',['../md_googletest_2docs_2gmock__cook__book.html#autotoc_md157',1,'']]],
  ['behavior_20based_20on_20the_20state_31',['Changing a Mock Object&apos;s Behavior Based on the State',['../md_googletest_2docs_2gmock__cook__book.html#autotoc_md149',1,'']]],
  ['behavior_20using_20on_5fcall_20would_20it_20be_20reasonable_20not_20to_20show_20the_20warning_20in_20this_20case_32',['gMock prints a warning when a function without EXPECT_CALL is called, even if I have set its behavior using ON_CALL. Would it be reasonable not to show the warning in this case?',['../md_googletest_2docs_2gmock__faq.html#autotoc_md194',1,'']]],
  ['better_20error_20messages_33',['Predicate Assertions for Better Error Messages',['../md_googletest_2docs_2advanced.html#autotoc_md15',1,'']]],
  ['between_34',['Between',['../namespacetesting.html#a3bb2d3cdd3fdf5b4be1480fce549918e',1,'testing']]],
  ['between_20overloaded_20functions_35',['Selecting Between Overloaded Functions',['../md_googletest_2docs_2gmock__cook__book.html#SelectOverload',1,'']]],
  ['between_20tests_20in_20the_20same_20test_20suite_36',['Sharing Resources Between Tests in the Same Test Suite',['../md_googletest_2docs_2advanced.html#autotoc_md43',1,'']]],
  ['beware_20of_20the_20nomenclature_37',['Beware of the Nomenclature',['../md_googletest_2docs_2primer.html#autotoc_md228',1,'']]],
  ['big_38',['Big',['../structtesting_1_1gtest__printers__test_1_1_big.html',1,'testing::gtest_printers_test::Big'],['../structtesting_1_1gtest__printers__test_1_1_big.html#adb57fb0e14adb81177e3bfd7ed39966c',1,'testing::gtest_printers_test::Big::Big()']]],
  ['biggestint_39',['BiggestInt',['../namespacetesting_1_1internal.html#a10f72a25fc44737bdc261f9ebb051ec3',1,'testing::internal']]],
  ['biggestintconvertible_40',['BiggestIntConvertible',['../class_biggest_int_convertible.html',1,'']]],
  ['binary_41',['Binary',['../classtesting_1_1gmock__function__mocker__test_1_1_foo_interface.html#a8d6e54401a3addca464903257529ace4',1,'testing::gmock_function_mocker_test::FooInterface::Binary()'],['../classtesting_1_1gmock__more__actions__test_1_1_foo.html#a8ee56742c6c025af680617464c71ecef',1,'testing::gmock_more_actions_test::Foo::Binary()'],['../namespacetesting_1_1gmock__more__actions__test.html#ad772cefe4443030c4b50e0d497d0edbb',1,'testing::gmock_more_actions_test::Binary()']]],
  ['binary_42',['binary',['../md_googletest_2docs_2quickstart-bazel.html#autotoc_md238',1,'Create and run a binary'],['../md_googletest_2docs_2quickstart-cmake.html#autotoc_md243',1,'Create and run a binary']]],
  ['binary_20comparison_43',['Binary Comparison',['../md_googletest_2docs_2reference_2assertions.html#binary-comparison',1,'']]],
  ['binary_5fname_44',['binary_name',['../namespacegoogletest-param-test-invalid-name1-test.html#a289b2115209757e5c2505ce69051bc44',1,'googletest-param-test-invalid-name1-test.binary_name'],['../namespacegoogletest-param-test-invalid-name2-test.html#a3a97074f78781b102ec3b3e2b59d6686',1,'googletest-param-test-invalid-name2-test.binary_name'],['../namespacegtest__testbridge__test.html#a69da1f8382ac3ebdb8b3570588442b5a',1,'gtest_testbridge_test.binary_name']]],
  ['binary_5foutput_45',['BINARY_OUTPUT',['../namespacegoogletest-catch-exceptions-test.html#ac02efc4cd44ac24ba2c8d34a0e787693',1,'googletest-catch-exceptions-test']]],
  ['bind_46',['Bind',['../structtesting_1_1internal_1_1_template_sel_1_1_bind.html',1,'testing::internal::TemplateSel']]],
  ['bits_47',['Bits',['../classtesting_1_1internal_1_1_floating_point.html#ac5a2385940070a11146badbac7c746e4',1,'testing::internal::FloatingPoint']]],
  ['bits_48',['bits',['../classtesting_1_1internal_1_1_floating_point.html#aed49c6dadf8dff4f65fbebef29bb1ae9',1,'testing::internal::FloatingPoint']]],
  ['blah_20blah_5fblah_20generates_20weird_20compiler_20errors_20in_20opt_20mode_20is_20this_20a_20googletest_20bug_49',['EXPECT_EQ(htonl(blah), blah_blah) generates weird compiler errors in opt mode. Is this a GoogleTest bug?',['../md_googletest_2docs_2faq.html#autotoc_md87',1,'']]],
  ['blah_5fblah_20generates_20weird_20compiler_20errors_20in_20opt_20mode_20is_20this_20a_20googletest_20bug_50',['EXPECT_EQ(htonl(blah), blah_blah) generates weird compiler errors in opt mode. Is this a GoogleTest bug?',['../md_googletest_2docs_2faq.html#autotoc_md87',1,'']]],
  ['body_20what_20s_20wrong_51',['The compiler complains about &quot;undefined references&quot; to some static const member variables, but I did define them in the class body. What&apos;s wrong?',['../md_googletest_2docs_2faq.html#autotoc_md88',1,'']]],
  ['bool_52',['Bool',['../struct_bool.html',1,'Bool'],['../struct_bool.html#a03dfd4851b13abb29414887fcada7fca',1,'Bool::Bool()'],['../namespacetesting.html#a1a0ebe4f77126fb464a8286ce6389bb9',1,'testing::Bool()']]],
  ['boolean_20conditions_53',['Boolean Conditions',['../md_googletest_2docs_2reference_2assertions.html#boolean',1,'']]],
  ['boolean_20function_54',['Using an Existing Boolean Function',['../md_googletest_2docs_2advanced.html#autotoc_md16',1,'']]],
  ['boolfromgtestenv_55',['BoolFromGTestEnv',['../namespacetesting_1_1internal.html#a67132cdce23fb71b6c38ee34ef81eb4c',1,'testing::internal']]],
  ['boolresetter_56',['BoolResetter',['../classtesting_1_1gmock__more__actions__test_1_1_bool_resetter.html',1,'testing::gmock_more_actions_test::BoolResetter'],['../classtesting_1_1gmock__more__actions__test_1_1_bool_resetter.html#aa9f2b7c0f12dd3b9732672e9ace9ae84',1,'testing::gmock_more_actions_test::BoolResetter::BoolResetter()']]],
  ['both_20death_20tests_20and_20non_20death_20tests_20what_20do_20i_20do_57',['But I don&apos;t like calling my entire test suite &lt;tt&gt;*DeathTest&lt;/tt&gt; when it contains both death tests and non-death tests. What do I do?',['../md_googletest_2docs_2faq.html#autotoc_md103',1,'']]],
  ['break_20points_58',['Turning Assertion Failures into Break-Points',['../md_googletest_2docs_2advanced.html#autotoc_md78',1,'']]],
  ['break_5fon_5ffailure_59',['break_on_failure',['../structtesting_1_1_flags.html#acccce2a9673bb61751269d2ef9c21c89',1,'testing::Flags']]],
  ['break_5fon_5ffailure_5fenv_5fvar_60',['BREAK_ON_FAILURE_ENV_VAR',['../namespacegoogletest-break-on-failure-unittest.html#ad9f1b313de456378bbb667e67ea92e03',1,'googletest-break-on-failure-unittest']]],
  ['break_5fon_5ffailure_5fflag_61',['BREAK_ON_FAILURE_FLAG',['../namespacegoogletest-break-on-failure-unittest.html#a013baf202661e3fa2eb77aaae85dc629',1,'googletest-break-on-failure-unittest']]],
  ['breaking_20existing_20code_62',['Simplifying the Interface without Breaking Existing Code',['../md_googletest_2docs_2gmock__cook__book.html#SimplerInterfaces',1,'']]],
  ['breakonfailure_63',['BreakOnFailure',['../structtesting_1_1_flags.html#a62660e44922321f7640bc951a04c2296',1,'testing::Flags']]],
  ['brief_64',['Brief',['../structtesting_1_1_flags.html#a367d58aed5d9b8959b648d758449e82c',1,'testing::Flags']]],
  ['brief_65',['brief',['../structtesting_1_1_flags.html#acffa8259476e4f802ed15d9fc9e2352c',1,'testing::Flags']]],
  ['briefunittestresultprinter_66',['BriefUnitTestResultPrinter',['../classtesting_1_1internal_1_1_brief_unit_test_result_printer.html',1,'testing::internal::BriefUnitTestResultPrinter'],['../classtesting_1_1internal_1_1_brief_unit_test_result_printer.html#af6bf92954a1838ac99a453393a036600',1,'testing::internal::BriefUnitTestResultPrinter::BriefUnitTestResultPrinter()']]],
  ['bug_67',['bug',['../md_googletest_2docs_2faq.html#autotoc_md87',1,'EXPECT_EQ(htonl(blah), blah_blah) generates weird compiler errors in opt mode. Is this a GoogleTest bug?'],['../md_googletest_2docs_2gmock__faq.html#autotoc_md189',1,'My program crashed and &lt;tt&gt;ScopedMockLog&lt;/tt&gt; spit out tons of messages. Is it a gMock bug?']]],
  ['build_20instructions_68',['Generic Build Instructions',['../md_googletest_2googletest_2_r_e_a_d_m_e.html',1,'']]],
  ['build_20systems_69',['Using GoogleTest from various build systems',['../md_googletest_2docs_2pkgconfig.html',1,'']]],
  ['build_20with_20cmake_70',['Build with CMake',['../md_googletest_2googletest_2_r_e_a_d_m_e.html#autotoc_md397',1,'']]],
  ['building_20with_20bazel_71',['Quickstart: Building with Bazel',['../md_googletest_2docs_2quickstart-bazel.html',1,'']]],
  ['building_20with_20cmake_72',['Quickstart: Building with CMake',['../md_googletest_2docs_2quickstart-cmake.html',1,'']]],
  ['builtindefaultvalue_73',['BuiltInDefaultValue',['../classtesting_1_1internal_1_1_built_in_default_value.html',1,'testing::internal']]],
  ['builtindefaultvalue_3c_20const_20t_20_3e_74',['BuiltInDefaultValue&lt; const T &gt;',['../classtesting_1_1internal_1_1_built_in_default_value_3_01const_01_t_01_4.html',1,'testing::internal']]],
  ['builtindefaultvalue_3c_20t_20_2a_20_3e_75',['BuiltInDefaultValue&lt; T * &gt;',['../classtesting_1_1internal_1_1_built_in_default_value_3_01_t_01_5_01_4.html',1,'testing::internal']]],
  ['builtindefaultvaluegetter_76',['BuiltInDefaultValueGetter',['../structtesting_1_1internal_1_1_built_in_default_value_getter.html',1,'testing::internal']]],
  ['builtindefaultvaluegetter_3c_20t_2c_20false_20_3e_77',['BuiltInDefaultValueGetter&lt; T, false &gt;',['../structtesting_1_1internal_1_1_built_in_default_value_getter_3_01_t_00_01false_01_4.html',1,'testing::internal']]],
  ['bunch_20of_20log_20messages_20what_20do_20i_20do_78',['GoogleTest output is buried in a whole bunch of LOG messages. What do I do?',['../md_googletest_2docs_2faq.html#autotoc_md97',1,'']]],
  ['buried_20in_20a_20whole_20bunch_20of_20log_20messages_20what_20do_20i_20do_79',['GoogleTest output is buried in a whole bunch of LOG messages. What do I do?',['../md_googletest_2docs_2faq.html#autotoc_md97',1,'']]],
  ['but_20gcc_20complains_20about_20conflicting_20return_20type_20specified_20what_20does_20it_20mean_80',['I use SetArgPointee() in WillOnce(), but gcc complains about &quot;conflicting return type specified&quot;. What does it mean?',['../md_googletest_2docs_2gmock__faq.html#autotoc_md201',1,'']]],
  ['but_20i_20did_20define_20them_20in_20the_20class_20body_20what_20s_20wrong_81',['The compiler complains about &quot;undefined references&quot; to some static const member variables, but I did define them in the class body. What&apos;s wrong?',['../md_googletest_2docs_2faq.html#autotoc_md88',1,'']]],
  ['but_20i_20don_20t_20like_20calling_20my_20entire_20test_20suite_20tt_20deathtest_20tt_20when_20it_20contains_20both_20death_20tests_20and_20non_20death_20tests_20what_20do_20i_20do_82',['But I don&apos;t like calling my entire test suite &lt;tt&gt;*DeathTest&lt;/tt&gt; when it contains both death tests and non-death tests. What do I do?',['../md_googletest_2docs_2faq.html#autotoc_md103',1,'']]],
  ['but_20not_20tt_20expect_5fne_20null_20ptr_20tt_20and_20tt_20assert_5fne_20null_20ptr_20tt_83',['Why does GoogleTest support &lt;tt&gt;EXPECT_EQ(NULL, ptr)&lt;/tt&gt; and &lt;tt&gt;ASSERT_EQ(NULL, ptr)&lt;/tt&gt; but not &lt;tt&gt;EXPECT_NE(NULL, ptr)&lt;/tt&gt; and &lt;tt&gt;ASSERT_NE(NULL, ptr)&lt;/tt&gt;?',['../md_googletest_2docs_2faq.html#autotoc_md84',1,'']]],
  ['but_20the_20change_20seems_20lost_20after_20the_20death_20test_20finishes_20why_84',['My death test modifies some state, but the change seems lost after the death test finishes. Why?',['../md_googletest_2docs_2faq.html#autotoc_md86',1,'']]],
  ['but_20tt_20test_5ff_20footest_20bar_20tt_20gives_20me_20error_20tt_20no_20matching_20function_20for_20call_20to_20footest_3a_3afootest_20tt_20why_85',['I have a fixture class &lt;tt&gt;FooTest&lt;/tt&gt;, but &lt;tt&gt;TEST_F(FooTest, Bar)&lt;/tt&gt; gives me error &lt;tt&gt;&quot;no matching function for call to `FooTest::FooTest()&apos;&quot;&lt;/tt&gt;. Why?',['../md_googletest_2docs_2faq.html#autotoc_md100',1,'']]],
  ['but_20using_20a_20real_20object_20is_20fine_20what_20can_20be_20wrong_86',['I get a heapcheck failure when using a mock object, but using a real object is fine. What can be wrong?',['../md_googletest_2docs_2gmock__faq.html#autotoc_md192',1,'']]],
  ['by_20a_20pointer_20argument_87',['Validating the Value Pointed to by a Pointer Argument',['../md_googletest_2docs_2gmock__cook__book.html#autotoc_md138',1,'']]],
  ['by_20handling_20test_20events_88',['Extending GoogleTest by Handling Test Events',['../md_googletest_2docs_2advanced.html#autotoc_md55',1,'']]],
  ['byconstref_89',['ByConstRef',['../namespacetesting_1_1gmock__more__actions__test.html#a38903b39cda75bfa5c932f4abec7a0ca',1,'testing::gmock_more_actions_test']]],
  ['bymove_90',['ByMove',['../namespacetesting.html#a38293837852ef2c406b063741018d108',1,'testing']]],
  ['bymovewrapper_91',['ByMoveWrapper',['../structtesting_1_1internal_1_1_by_move_wrapper.html',1,'testing::internal::ByMoveWrapper&lt; T &gt;'],['../structtesting_1_1internal_1_1_by_move_wrapper.html#a60df33395785e0bfc5f72fba32376349',1,'testing::internal::ByMoveWrapper::ByMoveWrapper()']]],
  ['byref_92',['ByRef',['../namespacetesting.html#a36843a208feed24c25663fbd331db103',1,'testing']]]
];
